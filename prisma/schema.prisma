generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id            Int                 @id @default(autoincrement())
  storeName     String              @map("store_name")
  address       String?
  phoneNumber   String?             @map("phone_number")
  reservations  Reservation[]
  staffs        Staff[]
  businessHours StoreBusinessHour[]

  @@map("store")
}

model StoreBusinessHour {
  id        Int     @id @default(autoincrement())
  storeId   Int     @map("store_id")
  dayOfWeek Int     @map("day_of_week")
  startTime String? @map("start_time")
  endTime   String? @map("end_time")
  isClosed  Boolean @default(false) @map("is_closed")
  store     Store   @relation(fields: [storeId], references: [id])

  @@unique([storeId, dayOfWeek])
  @@map("store_business_hour")
}

model Staff {
  id               Int               @id @default(autoincrement())
  storeId          Int               @map("store_id")
  staffName        String            @map("staff_name")
  phoneNumber      String?           @map("phone_number")
  email            String?
  reservations     Reservation[]
  store            Store             @relation(fields: [storeId], references: [id])
  reservationTypes ReservationType[] @relation("StaffOnReservationType")

  @@map("staff")
}

model ReservationType {
  id             Int           @id @default(autoincrement())
  typeName       String        @map("type_name")
  defaultMinutes Int           @map("default_minutes")
  description    String?
  reservations   Reservation[]
  staff          Staff[]       @relation("StaffOnReservationType")

  @@map("reservation_type")
}

model Reservation {
  id                Int             @id @default(autoincrement())
  storeId           Int             @map("store_id")
  reservationTypeId Int             @map("reservation_type_id")
  staffId           Int?            @map("staff_id")
  userEmail         String          @map("user_email")
  date              String          @map("date")
  startTime         DateTime        @map("start_time") 
  endTime           DateTime        @map("end_time") 
  status            String          @default("pending")
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @default(now()) @map("updated_at")
  reservationType   ReservationType @relation(fields: [reservationTypeId], references: [id])
  staff             Staff?          @relation(fields: [staffId], references: [id])
  store             Store           @relation(fields: [storeId], references: [id])

  @@map("reservation")
}
